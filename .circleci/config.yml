version: 2
dependencies:
  cache_directories:
    - "vendor/apt"
    - "vendor/apt/archives"
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Define Environment Variables at Runtime
          command: |
            echo "Current directory: ${PWD}"
            echo 'export BASEDIR=${PWD}'                                          >> ${BASH_ENV}
            echo 'export JDK_GRAAL_FOLDER_NAME=jdk8-with-graal-docker'            >> ${BASH_ENV}
            echo 'export BUILD_ARTIFACTS_DIR=${BASEDIR}/${JDK_GRAAL_FOLDER_NAME}' >> ${BASH_ENV}
            echo 'export JAVA_HOME=/usr/lib/jvm/jdk1.8.0/'                        >> ${BASH_ENV}
            echo 'export PATH=${JAVA_HOME}/bin:${PATH}'                           >> ${BASH_ENV}
            echo 'export SCRIPTS_LIB_DIR=${BASEDIR}/build/x86_64/linux_macos/lib' >> ${BASH_ENV}
            echo 'export MX=${BASEDIR}/mx/mx'                                     >> ${BASH_ENV}
            echo 'export GRAAL_JVMCI_8_TAG=master'                                >> ${BASH_ENV}
            echo 'export RUN_TESTS="true"'                                        >> ${BASH_ENV}
            echo 'export GRAALVM_SUITE_RUNTIMES="/substratevm,/tools,sulong,/graal-nodejs,truffleruby,graalpython"' >> ${BASH_ENV}
            echo 'export HOTSPOT_BUILD_JOBS=2'                                    >> ${BASH_ENV}
            echo 'export FASTR_RELEASE="true"'                                    >> ${BASH_ENV}
            echo 'export LANG="en_US.UTF-8"'                                      >> ${BASH_ENV}
            echo 'export LC_ALL="en_US.UTF-8"'                                    >> ${BASH_ENV}
            echo 'export LC_CTYPE="en_US.UTF-8"'                                  >> ${BASH_ENV}
            source ${BASH_ENV}
          when: always
      - run:
          name: Run script to build in a docker container
          command: ./build/x86_64/linux_macos/docker-build.sh
          timeout: 30m
          no_output_timeout: 20m
      - run:
          name: Archiving artifacts
          command: |
            ./build/x86_64/linux_macos/lib/archivingArtifacts.sh ${BASEDIR} ${MX} ${JDK_GRAAL_FOLDER_NAME} ${BUILD_ARTIFACTS_DIR}
          timeout: 3m
          no_output_timeout: 2m
      - run:
          name: Collecting and archiving logs (debug and error logs)
          command: |
            ./build/x86_64/linux_macos/lib/archivingLogs.sh ${BASEDIR}
          timeout: 3m
          no_output_timeout: 2m
          when: always
      - store_artifacts:
          name: Uploading logs
          path: logs/
      - store_artifacts:
          name: Uploading artifacts in jdk8-with-graal-docker
          path: jdk8-with-graal-docker/