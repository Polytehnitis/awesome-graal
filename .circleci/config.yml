version: 2
dependencies:
  cache_directories:
    - "vendor/apt"
    - "vendor/apt/archives"
jobs:
  build:
    docker:
      - image: neomatrix369/graal-jdk8:latest
    steps:
      - checkout
      - run:
          name: Define Environment Variables and update JAVA_HOME and PATH at Runtime
          command: |
            echo 'export JAVA_VERSION=jdk8u144-b01'                               >> ${BASH_ENV}
            echo 'export JAVA_HOME=/opt/java/openjdk/${JAVA_VERSION}'             >> ${BASH_ENV}
            echo 'export PATH=${JAVA_HOME}/bin:${PATH}'                           >> ${BASH_ENV}
            echo 'export BASEDIR=${PWD}'                                          >> ${BASH_ENV}
            echo 'export SCRIPTS_LIB_DIR=${BASEDIR}/build/x86_64/linux_macos/lib' >> ${BASH_ENV}
            echo 'export MX=${BASEDIR}/mx/mx'                                     >> ${BASH_ENV}
            echo 'export JDK_GRAAL_FOLDER_NAME=jdk8-with-graal'                   >> ${BASH_ENV}
            echo 'export GRAAL_JVMCI_8_TAG=jvmci-0.46'                            >> ${BASH_ENV}
            echo 'export BUILD_ARTIFACTS_DIR=${BASEDIR}/${JDK_GRAAL_FOLDER_NAME}' >> ${BASH_ENV}
            echo 'export RUN_TESTS="true"'                                        >> ${BASH_ENV}
            echo 'export GRAALVM_SUITE_RUNTIMES="/substratevm,/tools,sulong,/graal-nodejs,truffleruby,graalpython"' >> ${BASH_ENV}
            echo 'export HOTSPOT_BUILD_JOBS=2'                                    >> ${BASH_ENV}
            echo 'export FASTR_RELEASE="true"'                                    >> ${BASH_ENV}
            echo 'apt-get install -y locales'                                     >> ${BASH_ENV}
            echo 'locale-gen en_US.UTF-8'                                         >> ${BASH_ENV}
            echo 'export LANG="en_US.UTF-8"'                                      >> ${BASH_ENV}
            echo 'export LC_ALL="en_US.UTF-8"'                                    >> ${BASH_ENV}
            echo 'export LC_CTYPE="en_US.UTF-8"'                                  >> ${BASH_ENV}
            source ${BASH_ENV}
      - run:
          name: Display HW, SW, Runtime env. info and versions of dependencies
          command: ./build/x86_64/linux_macos/lib/displayDependencyVersion.sh
      - run:
          name: Setup MX
          command: ./build/x86_64/linux_macos/lib/setupMX.sh ${BASEDIR}
      - run:
          name: Build JDK JVMCI
          command: ./build/x86_64/linux_macos/lib/build_JDK_JVMCI.sh ${BASEDIR} ${MX}
          timeout: 20m
          no_output_timeout: 15m
      - run:
          name: Run JDK JVMCI Tests
          command: ./build/x86_64/linux_macos/lib/run_JDK_JVMCI_Tests.sh ${BASEDIR} ${MX}
      - run:
          name: Setting up environment and Build Graal Compiler
          command: |
            echo ">>>> Currently JAVA_HOME=${JAVA_HOME}"
            JDK8_JVMCI_HOME="$(cd ${BASEDIR}/graal-jvmci-8/ && ${MX} --java-home ${JAVA_HOME} jdkhome)"
            echo "export JVMCI_VERSION_CHECK='ignore'" >> ${BASH_ENV}
            echo "export JAVA_HOME=${JDK8_JVMCI_HOME}" >> ${BASH_ENV}
            source ${BASH_ENV}
      - run:
          name: Build Graal Compiler
          command: |
            echo ">>>> Using JDK8_JVMCI_HOME as JAVA_HOME (${JAVA_HOME})"
            ./build/x86_64/linux_macos/lib/buildGraalCompiler.sh ${BASEDIR} ${MX} ${BUILD_ARTIFACTS_DIR}
          timeout: 10m
          no_output_timeout: 7m
      - run:
          name: Build GraalVM Suite
          command: |
            ./build/x86_64/linux_macos/lib/buildGraalVMSuite.sh ${BASEDIR} ${MX} ${GRAALVM_SUITE_RUNTIMES}
          timeout: 10m
          no_output_timeout: 7m
      - run:
          name: Archiving artifacts
          command: |
            ./build/x86_64/linux_macos/lib/archivingArtifacts.sh ${BASEDIR} ${MX} ${JDK_GRAAL_FOLDER_NAME} ${BUILD_ARTIFACTS_DIR}
          timeout: 3m
          no_output_timeout: 2m
      - store_artifacts:
          path: /home/graal/project/jdk8-with-graal-local/
